<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on 傅万斌的个人网站</title>
    <link>https://fuwanbin.github.io/categories/code/</link>
    <description>Recent content in code on 傅万斌的个人网站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy; 2021 &lt;a href=&#34;https://fuwanbin.github.io/&#34;&gt;Wanbin Fu&lt;/a&gt;
</copyright><atom:link href="https://fuwanbin.github.io/categories/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello_client.c</title>
      <link>https://fuwanbin.github.io/posts/hello_client.c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fuwanbin.github.io/posts/hello_client.c/</guid>
      <description>#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;lt;arpa/inet.h&amp;gt; #include &amp;lt;sys/socket.h&amp;gt; void error_handling(char *message); int main(int argc, char *argv[]) { int sock; struct sockaddr_in serv_addr; char message[30]; int str_len; if (argc != 3) { printf(&amp;quot;Usage : %s &amp;lt;IP&amp;gt; &amp;lt;port&amp;gt;\n&amp;quot;, argv[0]); exit(1); } //创建套接字，此时套接字并不马上分为服务端和客户端。如果紧接着调用 bind,listen 函数，将成为服务器套接字 //如果调用 connect 函数，将成为客户端套接字 sock = socket(PF_INET, SOCK_STREAM, 0); if (sock == -1) error_handling(&amp;quot;socket() error&amp;quot;); memset(&amp;amp;serv_addr, 0, sizeof(serv_addr)); serv_addr.</description>
    </item>
    
    <item>
      <title>Hello_server.c</title>
      <link>https://fuwanbin.github.io/posts/hello_server.c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fuwanbin.github.io/posts/hello_server.c/</guid>
      <description>#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;lt;arpa/inet.h&amp;gt; #include &amp;lt;sys/socket.h&amp;gt; void error_handling(char *message); int main(int argc, char *argv[]) { int serv_sock; int clnt_sock; struct sockaddr_in serv_addr; struct sockaddr_in clnt_addr; socklen_t clnt_addr_size; char message[] = &amp;quot;Hello World!&amp;quot;; if (argc !</description>
    </item>
    
  </channel>
</rss>
